{"ast":null,"code":"var _jsxFileName = \"/home/dev/geeta-work/weather/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport Title from './components/Title';\nimport Weather from './components/Weather';\nconst API_KEY = '9093801c1659ed5a1edc5207aa5032a7';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: undefined,\n      country: undefined,\n      temperature: undefined,\n      description: undefined,\n      humidity: undefined,\n      pressure: undefined,\n      seaLevel: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      const api_call = await fetch(\"https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY));\n      const data = await api_call.json();\n\n      if (city && country) {\n        this.setState({\n          city: data.name,\n          country: data.sys.country,\n          temperature: data.main.temp,\n          description: data.weather[0].description,\n          humidity: data.main.humidity,\n          pressure: data.main.pressure,\n          seaLevel: data.main.seaLevel,\n          error: ''\n        });\n        console.log(data);\n      } //if\n      else {\n          this.setState({\n            city: undefined,\n            country: undefined,\n            temperature: undefined,\n            description: undefined,\n            humidity: undefined,\n            pressure: undefined,\n            seaLevel: undefined,\n            error: 'Please Enter The Value'\n          });\n        }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      temperature: this.state.temperature,\n      description: this.state.description,\n      humidity: this.state.humidity,\n      pressure: this.state.pressure,\n      seaLevel: this.state.seaLevel,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dev/geeta-work/weather/src/App.js"],"names":["React","Form","Title","Weather","API_KEY","App","Component","state","city","undefined","country","temperature","description","humidity","pressure","seaLevel","error","getWeather","e","preventDefault","target","elements","value","api_call","fetch","data","json","setState","name","sys","main","temp","weather","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport Form from './components/Form';\nimport Title from './components/Title';\nimport Weather from './components/Weather';\n\nconst API_KEY = '9093801c1659ed5a1edc5207aa5032a7';\n\nclass App extends React.Component{\n\n  state={\n    city : undefined,\n    country : undefined,\n    temperature : undefined,\n    description: undefined,\n    humidity: undefined,\n    pressure: undefined,\n    seaLevel: undefined,\n    error : undefined,\n  }\n\n  getWeather = async (e) =>{\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    const api_call = await fetch(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\n    \n    const data = await api_call.json();\n\n    \n    if(city && country){\n      \n    this.setState( {\n      city: data.name,\n      country: data.sys.country,\n      temperature: data.main.temp,\n      description: data.weather[0].description,\n      humidity: data.main.humidity,\n      pressure: data.main.pressure,\n      seaLevel: data.main.seaLevel,\n      error: '',\n      \n    });\n\n    console.log(data);\n    }//if\n\n    else{\n      this.setState( {\n        city : undefined,\n    country : undefined,\n    temperature : undefined,\n    description: undefined,\n    humidity: undefined,\n    pressure: undefined,\n    seaLevel: undefined,\n        error: 'Please Enter The Value',\n        \n      });\n      \n\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        <Title />\n        <Form getWeather={this.getWeather}/>\n        <Weather \n          city = {this.state.city}\n          country = {this.state.country}\n          temperature = {this.state.temperature}\n          description = {this.state.description}\n          humidity = {this.state.humidity}\n          pressure = {this.state.pressure}\n          seaLevel = {this.state.seaLevel}\n          error = {this.state.error}\n        \n        />\n\n      </div>\n    );\n  }\n\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}